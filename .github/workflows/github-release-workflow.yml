name: Github Release Workflow
on:
  push:
    branches:
      - staging
    tags:
      - "^((\\d(\\.)?)*\\d+)(-\\w+)?$"
jobs:
  deploy:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        arch: [ x64, arm64 ]
        exclude:
          - os: ubuntu-latest
            arch: arm64
          - os: windows-latest
            arch: arm64
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21 Linux
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          #jdkFile: ${{ runner.temp }}/java_package.tar.gz
          java-version: '21'
          architecture: x64

      - name: Set up JDK 21 macOS x64
        if: startsWith(matrix.os, 'macos') && matrix.arch == 'x64'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          #jdkFile: ${{ runner.temp }}/x64/java_package.tar.gz
          java-version: '21'
          architecture: x64

      - name: Set up JDK 21 macOS arm64
        if: startsWith(matrix.os, 'macos') && matrix.arch == 'arm64'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          #jdkFile: ${{ runner.temp }}/arm64/java_package.tar.gz
          java-version: '21'
          architecture: aarch64

      - name: Set up JDK 21 Windows
        if: startsWith(matrix.os, 'windows')
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          #jdkFile: java_package.zip
          java-version: '21'
          architecture: x64
      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build Jar
        run: mvn --batch-mode clean package
      - name: Build Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: mvn --batch-mode package -P build-linux
      - name: Build Windows
        if: startsWith(matrix.os, 'windows')
        run: mvn --batch-mode package -P build-windows
      - name: Build macOS x64
        if: ${{ startsWith(matrix.os, 'macos') && matrix.arch == 'x64' }}
        run: mvn --batch-mode package -P build-macos-x64
      - name: Build macOS arm64
        if: ${{ startsWith(matrix.os, 'macos') && matrix.arch == 'arm64' }}
        run: mvn --batch-mode package -P build-macos-arm64
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            target/*.deb
            target/*.rpm
            target/*/*.app
            target/*.dmg
            target/*.exe
          retention-days: 1
  deploy-hu:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        arch: [ x64, arm64 ]
        exclude:
          - os: ubuntu-latest
            arch: arm64
          - os: windows-latest
            arch: arm64
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21 Linux
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          #jdkFile: ${{ runner.temp }}/java_package.tar.gz
          java-version: '21'
          architecture: x64

      - name: Set up JDK 21 macOS x64
        if: ${{ startsWith(matrix.os, 'macos') && matrix.arch == 'x64' }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          #jdkFile: ${{ runner.temp }}/x64/java_package.tar.gz
          java-version: '21'
          architecture: x64

      - name: Set up JDK 21 macOS arm64
        if: ${{ startsWith(matrix.os, 'macos') && matrix.arch == 'arm64' }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          #jdkFile: ${{ runner.temp }}/arm64/java_package.tar.gz
          java-version: '21'
          architecture: aarch64

      - name: Set up JDK 21 Windows
        if: startsWith(matrix.os, 'windows')
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          #jdkFile: java_package.zip
          java-version: '21'
          architecture: x64

      - name: Build Jar
        run: mvn --batch-mode clean package -P hu
      - name: Build Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: mvn --batch-mode package -P build-linux -D jar.id=-hu
      - name: Build Windows
        if: startsWith(matrix.os, 'windows')
        run: mvn --batch-mode package -P build-windows -D jar.id=-hu
      - name: Build macOS x64
        if: startsWith(matrix.os, 'macos') && matrix.arch == 'x64'
        run: mvn --batch-mode package -P build-macos-x64 -D jar.id=-hu
      - name: Build macOS arm64
        if: startsWith(matrix.os, 'macos') && matrix.arch == 'arm64'
        run: mvn --batch-mode package -P build-macos-arm64 -D jar.id=-hu
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-hu-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            target/*.deb
            target/*.rpm
            target/*.dmg
            target/*.exe
          retention-days: 1